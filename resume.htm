<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
	<meta name="author" content="Nikita Belousov" />
    <link href="css/reset.css" rel="stylesheet" type="text/css" />
    <link href="css/style.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" type="text/css" href="css/jquery.lightbox-0.5.css" media="screen" />
    
	<title>masRevolution | Resume</title>
    
    <script type="text/javascript" src="js/jquery.js"></script>
    
    <!-- Loading -->
    <script type="text/javascript">
    $(function() { 
    $('.main_content, .main_navi').hide(); 
    $(window).load( function() {  
    $('#loader').fadeOut();
    $('.main_content, .main_navi').fadeIn(500); 
    } );
    } );
                        
    $(document).ready(function() {
    $("body").css("display", "none");

    $("body").fadeIn(500);

	$("a.transition").click(function(event){
		event.preventDefault();
		linkLocation = this.href;
		$("body").fadeOut(500, redirectPage);
	});

	function redirectPage() {
		window.location = linkLocation;
	}
    });
    </script>
    
</head>

<body id="home">
<div id="container">

    <div class="stripe"></div>

<div id="content">

<!-- Header -->

<div id="header">

<div id="loader"><img alt="Loading.." src="img/ajax-loader.gif" /></div>

<ul class="main_navi">
        <li><a class="transition" href="index.htm">Home</a></li>
        <li><a class="transition" href="about.htm">About</a></li>
        <li><a class="transition" href="portfolio.htm">My Code</a></li>
        <li class="current"><a class="transition" href="resume.htm">Resume</a></li>
        <li><a class="transition" href="dj.htm">DJ</a></li>
        <li><a class="transition" href="contact.htm">Contact</a></li>
</ul>

<a title="Back to home" href="index.htm"><img alt="SimpleTipe" class="logo" src="img/logo.png" /></a>

</div>



<!-- Top Content -->
<div class="main_content">

    <div id="about_page">
    <h1 class="portfolio">Resume</h1>   
    <p class="portfolio">
   <b>&#149; <a href="http://www.masrevolution.com/Download/resume_shah.pdf">PDF</a></b><br>
   <b>&#149; <a href="http://www.masrevolution.com/Download/resume_shah.tex">LaTeX</a></b>
   </p>
    </div>

    </div>
    
    <div id="about_page">
    <h2 class="portfolio">Objective</h2> 
    <p class="portfolio">A consulting position in software project management or software engineering, preferably with a focus on robotics, artificial intelligence, and/or programming language implementation.
    </p>
    </div>

    <div id="about_page">
    <h2 class="portfolio">Education</h2> 
    <p class="portfolio">
      <b>Master of Science</b>, Computer Science & Engineering <br>
      <a href="http://www.psu.edu">Penn State University</a>, University Park, PA &ndash; July 2011 <br>
      GPA: 3.71 / 4.00 <br>
      <a href="http://www.masrevolution.com/Download/thesis_shah.pdf">Thesis: <i>A Language-Based Software Framework for Mission Planning in Autonomous
      Mobile Robots</i></a><br>
      Designed and implemented a domain-specific programming language (DSL) and compiler in OCaml for mission planning in autonomous mobile robots. Users can program a robot with a highly declarative mission specification using the DSL and generate (via compilation) a fine-grained, timestamped, set of imperative commands for the robot&#39;s
      actuators and subsystems. Users can customize the semantics of the language primitives utilizing a plugin system via an object-oriented API. Using this system results in
      faster development of autonomy software for robots, increases reuse of code through plugins, graceful degradation of robot performance through exception handling, and provides high levels of static and runtime verification to guarantee operational correctness of robot.
      </p>

    <p class="portfolio">
<b>Bachelor of Science</b>, Computer Science<br>
<a href="http://www.psu.edu">Penn State University</a>, University Park, PA &ndash; May 2005<br>
Overall GPA: 3.65 / 4.00<br>
Major GPA: 3.67 / 4.00<br>
      </p>
    </div>


    <div id="about_page">
    <h2 class="portfolio">Skills</h2> 
    <p class="portfolio">
   <b>Key Areas of Expertise: </b>Software Engineering, Computer Science, Software Project Management, Software Architecture, Robotics, Autonomous Control Systems, Artificial Intelligence, Programming Languages
   <br><br>
   <b>Strongest Computer Science Areas: </b>Programming Languages, Operating Systems, Computer Networks, Data Structures & Algorithms, Computer Architecture, Compilers, Artificial Intelligence, Database Management Systems, Computer Graphics, Theory of Computation, Discrete Mathematics
   <br><br>
   <b>Programming Paradigms: </b>Functional, Object-Oriented, Procedural/Imperative
   <br><br>
   <b>Programming Languages: </b>C++, C, OCaml, Python, Matlab, Java
   <br><br>
   <b>Software Development Skills: </b>Disciplined Software Engineering, Configuration Management Systems/Revision Control Systems, Bug Tracking Systems, Code Documentation Systems, Multi-threaded Programming, Design Patterns, Code Refactoring, Code Profiling, Unit Testing, Regression Testing
   <br><br>
   <b>Software Development Tools: </b>gcc, Qt Creator, MS Visual Studio, Eclipse, gdb, Code::Blocks, mex (Matlab-C interface), GNU Make, CMake, iPython, lex, yacc, git, GitHub, Subversion (svn), Unified Modeling Language (UML), Arduino IDE, Doxygen, LaTeX
   <br><br>
   <b>Software Development Libraries: </b>ROS (robotics), MOOS (robotics), Boost (C++ extensions), POCO (C++ extensions), OpenGL (3D graphics), OpenCV (computer vision), BSD sockets (network programming), Gtk+ (GUI programming), MFC (GUI programming), sqlite (database), MySQL (database), GDI/GDI+ (2D graphics), pthreads (POSIX threads), lpsolve (linear program solver), DevIL (image rendering), Gambit (game theory solver), Festival (speech synthesis), CMU Sphinx (speech recognition)
   <br><br>
   <b>Operating Systems:</b> Linux, Unix, Windows, MacOS X, Android
   <br><br>
   <b>Robot Operating System (ROS) Competency:</b> core concepts (nodes, master, topics, messages, services, parameter server, bags), core tools (tf, catkin/rosmake, bloom, class_loader (author), pluginlib (refactored), ros comm (includes roscpp,rospy), rosjava, nodelet, bond core), nav stack (move_base, gmapping, amcl, map_server, costmap 2d, base local planner, nav fn), visualization tools (rviz, rqt), sensor drivers (freenect, openni, leap motion (maintainer), xv_11_laser), base drivers (pr2, irobot create, yujin kobuki, robot pose ekf), heartbeats (author), shield teleop (author), AR tags (ar_track_alvar), video stream transport and processing (image_transport, cv_bridge), joystick drivers (joy, ps3joy), simulation (gazebo), point clouds (pcl)
   <br><br>
   <b>Information Technology Skills:</b> Server Deployment (database management systems, web servers, wikis, source control, etc), Network Deployment (setting up routers, switches, etc), System Administration
   
   </p>
    </div>

    <div id="about_page">
    <h2 class="portfolio">Languages</h2> 
    <p class="portfolio">
   <b>English:</b> <i>Native Speaker</i><br>
   <b>Hindi/Urdu:</b> <i>Fluent</i>
   </p>
    </div>

    <div id="about_page">
    <h2 class="portfolio">Experience</h2> 
   <p class="portfolio">
    <b>Entrepreneur and Consultant
</b><br>
   <i><a href="http://www.masrevolution.com">Self-Employed</a></i><br>
   <i>August 2013 - Present</i><br>
   &#149; Founder and technology development lead of stealth robotics venture.<br>
   &#149; Consultant on the side, clients so far include the Open Source Robotics Foundation and Storybox, LLC.<br>
   <br>

   <b>Software Engineer</b><br>
   <i><a href="http://www.willowgarage.com">Willow Garage</a></i><br>
   <i>August 2012 - August 2013</i><br>
   First six months:<br>
   &#149; Software engineer on the core ROS platform team. <a href="http://www.ros.org">ROS (Robot Operating System)</a> is the de facto software platform in robotics and one of the largest open source projects in the world.<br>
   &#149; Designed, implemented, maintained, and improved open source packages in both C++ and Python for ROS. Wrote extensive documentation and regression tests.<br>
   &#149; Responded quickly to bugs/issues submitted by community as well as incorporating community feedback in design decisions.<br>
   &#149; Still continue to maintain some packages voluntarily to help support the community.<br>
   <br>
   Second six months:<br>
   &#149; Joined Web Robotics group focused on building a next-generation Willow Garage autonomous robot intended for the services and healthcare industries.<br>
   &#149; Designed, implemented, and integrated software featuring aspects of the robot&#39;s autonomy software stack. Software was built on top of ROS and implemented in both Python and C++. Extensive documentation was written for all software.<br>
   &#149; Co-maintained/implemented our team&#39;s build farm with Jenkins.<br>
   &#149; Did some minor Android development with ROS integration using rosjava. Created and open sourced a video teleop application for the nVidia Shield Android gaming device.<br>
   <br>

   <b>Founder and Technology Development Lead</b><br>
   <i>Emoto Robotics (Not incorporated)</i><br>
   <i>December 2011 - July 2012</i><br>
   &#149; Founder of a robotics startup focused on giving robots personality, emotion, human awareness, and other anthropomorphically-desirable qualities.<br>
   &#149; Created original concept, all software, and a fully-functioning robotic prototype with features including object following, speech recognition, and emotional emulation.<br>
   <br>
   <b>Instructor (Adjunct Faculty)</b><br>
   <i><a href="http://www.cse.psu.edu">Penn State University - Department of Computer Science & Engineering</a></i><br>
   <i>August 2011 - December 2011</i><br>
   &#149;  Taught 156 non-technical university students the basics of computer science and programming in C++<br>
   &#149;  Designed course from scratch to make computer science more compelling to non-technical people. Managed course with a <a href="http://www.masrevolution.com/CMPSC101">wiki</a>.<br>
   &#149;  Wrote entire <a href="http://www.masrevolution.com/CMPSC101/index.php?title=Category:Textbook">textbook</a>, all <a href="http://www.masrevolution.com/CMPSC101/index.php?title=Category:Homework">assignments</a>, and <a href="http://www.masrevolution.com/CMPSC101/index.php?title=Category:Tools">course software</a>. Released at the end of the semester under open source licenses.<br>
   &#149;  Taught students more practical applications of programming, including basics of autonomous robotics and making games. <a href="http://www.masrevolution.com/CMPSC101/index.php?title=Category:Student_Projects">Final project</a> involved making a graphical game in C++ more complex than Pong.<br>
   <br>
   <b>Research Engineer</b><br>
   <i><a href="http://www.arl.psu.edu">Penn State University Applied Research Laboratory</a></i><br>
   <i>Autonomous Control & Intelligent Systems Division</i><br>
   <i>Operations Research Department</i><br>
   <i>July 2010 - December 2011</i><br>
   &#149;  Main role was applying computer science and software engineering principles to operations research problems in military applications, primarily naval warfare. Operations research is the study of finding optimal/near-optimal solutions to complex decision making problems.<br>
   &#149;  Frequently involved implementation and optimization of computationally demanding algorithms. Required a solid understanding of data structures, complexity theory, computer architecture, and concurrent computing.<br>
   &#149;  Brought software engineering and computer science experience to an applied mathematics-dominated group that uses Matlab exclusively. Helped team inexperienced with writing large amounts of code create more maintainable software, use source control, and embrace object-oriented capabilities of modern Matlab.Occasionaly, would write algorithms that needed to be fast in C/C++ for team which could be called from Matlab via mex.<br>
   &#149;  Areas of focus: game theory, genetic algorithms, probabilistic methods, constraint programming, multi-objective optimization.<br>
   <br>
   <b>Instructor (Adjunct Faculty)</b><br>
   <i><a href="http://www.cse.psu.edu">Penn State University - Department of Computer Science & Engineering</a></i><br>
   <i>August 2011 - December 2011</i><br>
   &#149;  Taught 156 non-technical university students the basics of computer science and programming in C++<br>
   &#149;  Designed course from scratch to make computer science more compelling to non-technical people. Managed course with a <a href="http://www.masrevolution.com/CMPSC101">wiki</a>.<br>
   &#149;  Wrote entire <a href="http://www.masrevolution.com/CMPSC101/index.php?title=Category:Textbook">textbook</a>, all <a href="http://www.masrevolution.com/CMPSC101/index.php?title=Category:Homework">assignments</a>, and <a href="http://www.masrevolution.com/CMPSC101/index.php?title=Category:Tools">course software</a>. Released at the end of the semester under open source licenses.<br>
   &#149;  Taught students more practical applications of programming, including basics of autonomous robotics and making games. <a href="http://www.masrevolution.com/CMPSC101/index.php?title=Category:Student_Projects">Final project</a> involved making a graphical game in C++ more complex than Pong.<br>
   <br>
   <b>Research Engineer</b><br>
   <i><a href="http://www.arl.psu.edu">Penn State University Applied Research Laboratory</a></i><br>
   <i>Autonomous Control & Intelligent Systems Division</i><br>
   <i>Intelligent Control Systems Department</i><br>
   <i>August 2005 - July 2010</i><br>
   &#149;  Developer of autonomous control software for systems built by ARL, primarily autonomous underwater vehicles (AUVs) used for military applications.<br>
   &#149;  Designed several software libraries, frameworks, and applications in C and C++ for redundant tasks in robotics such as interprocess communication, geographical displays, graphics engines, physics engines, simulation, and behavior-based robotics.<br>
   &#149;  Lead software engineer on several projects and participated in many field tests.<br>
   &#149;  Pushed for more disciplined approach to software engineering and led initiatives leading to the deployment of a division-wide source control system and deployment of Lab-wide wiki to encourage collaboration.<br>
   &#149;  Mentored several interns in the areas of software engineering and computer science.<br>
   <br>
   <b>Intern Research Engineer</b><br>
   <i><a href="http://www.arl.psu.edu">Penn State University Applied Research Laboratory</a></i><br>
   <i>Autonomous Control & Intelligent Systems Division</i><br>
   <i>Intelligent Control Systems Department</i><br>
   <i>May 2004 - August 2005</i><br>
   &#149;  Ported a graphical Win32 application used for controlling an autonomous vehicle to a portable digital assistant (PDA) running WindowsMobile operating system. PDA could control a vehicle through a graphical display wirelessly as well as receive vehicle telemetry.<br>
   &#149;  Wrote a comprehensive library for geographical calculations including map projections and access to various geographical data sets. Used for both navigation by autonomous robots as well as for rendering field telemetry on geographical displays.<br>
   </p>

    </div>

    <div id="about_page">
    <h2 class="portfolio">Publications</h2> 
    <p class="portfolio">M. A. Shah, D. S. Neal, J. R. Williams, J. J. Weinschenk, &quot;Network and Field Control (NAFCON) for Persistent Littoral Undersea Surveillance,&quot; <i>Journal of Underwater Acoustics</i>, Volume 59, No. 3, July 2009.
</p>
    </div>
   
<div id="footer">
    &#169; Copyright (c) Mirza Akbar Shah. All rights reserved.
</div>

</div>
</div>
</div>
</body>
</html>
